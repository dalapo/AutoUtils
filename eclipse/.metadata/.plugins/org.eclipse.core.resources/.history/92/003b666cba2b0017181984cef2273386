package dalapo.autoutils.tileentity;

import net.minecraft.block.Block;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.inventory.IInventory;
import net.minecraft.item.ItemStack;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.world.World;
import net.minecraftforge.common.util.ForgeDirection;

public class TileEntityStackMover extends TileEntityDirectional {
	ItemStack[] filter;
	public TileEntityStackMover(ForgeDirection d)
	{
		super(d);
		filter = new ItemStack[9];
	}
	
	private boolean shouldFilter()
	{
		for (ItemStack is : filter)
		{
			if (is != null) return true;
		}
		return false;
	}
	
	private boolean checkFilter(ItemStack i)
	{
		if (!shouldFilter()) return true;
		for (ItemStack is : filter)
		{
			if (is.getItem().equals(i.getItem())) return true;
		}
		return false;
	}
	
	private int getSlot(IInventory te)
	{
		if (te == null) return -1;
		for (int i=0; i<te.getSizeInventory(); i++)
		{
			if (checkFilter(te.getStackInSlot(i)))
			{
				/*
				ItemStack itemstack = ((IInventory)te).getStackInSlot(i);
				((IInventory)te).setInventorySlotContents(i, null);
				((IInventory)te).markDirty();
				return itemstack;
				*/
				return i;
			}
		}
		return -1;
	}
	public void transferStack(ItemStack itemstack)
	{
		TileEntity pull = worldObj.getTileEntity(xCoord + front.offsetX, yCoord + front.offsetY, zCoord + front.offsetZ);
		TileEntity push = worldObj.getTileEntity(xCoord - front.offsetX, yCoord - front.offsetY, zCoord - front.offsetZ);
		
	}
}